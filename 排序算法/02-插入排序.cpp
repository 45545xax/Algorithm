

// 插入排序
/*
	
*/


// __________________________1 插入排序 __________________________
/*
	方法：从数组的二个元素开始，设当前位置索引是i，通过找到当前元素array[i]在前面i个元素中的正确位置j后，将j位置及j到i-1位置中间的元素后移一位，
	然后将当前元素插在j位置，这样前i个元素变成有序的了，然后i++,再通过比较和插入使得前i+1个元素有序，直到最后。
*/

void InsertSort(int arr[], int nlen)
{
    int i,j;
    int ntemp;
    for(i=1; i<nlen; i++)
    {
        ntemp = arr[i];
        for(j=i; j>0 && arr[j-1]>ntemp; j--)
            arr[j] = arr[j-1];
        arr[j] = ntemp;
    }
}	

/*
unsort array:
2 4 6 3 5 9 11
sort array:
2 3 4 5 6 9 11
*/

/*
	两种排序算法的时间复杂度都是O(N2)。但是冒泡排序增加了哨兵指示，用来判断是否当前排序已经处于有序状态，从而避免没必要的比较。
	在一般的小数据排序时，这两种都是很好的选择，因为实现起来简单。
*/