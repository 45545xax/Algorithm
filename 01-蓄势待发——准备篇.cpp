

// 第01章 蓄势待发——准备篇
/*
	
*/
// __________________________1.2 最负盛名的程序设计竞赛__________________________

// 1.2.1  	Google Code Jam (GCJ)		http://code.google.com/codejam/
// 1.2.2  	TopCoder
// 1.2.3 	ACM (大学生)
// 1.2.4	IOI(初中，高中)
/* 1.2.5 	Online Judge(OJ)
	
	PKU Online Judge(POJ) 			http://poj.org
	题库中有大量的题目

	Sphere Online Judge(SPOJ)		http://www.spoj.pl/
	允许使用各种各样的编程语言

	SGU Online Contester			http://acm.sgu.ru/
	具有模拟参加历史比赛的虚拟赛功能

	Codeforces						http://codeforces.com
	不断维护历届题库
*/ 



// __________________________1.4 如何提交解答__________________________




// __________________________1.6 轻松热身__________________________
// 1.6.1 先从简单题开始
/*
	三角形
	有n根棍子，棍子的长度为ai.想要从中选出3根棍子组成周长尽可能长的三角形。
	请输出最大的周长，若无法组成三角形则输出0.

	限制条件
	3<=n<=100
	1<=a[i]<=10的6次

	样例：
输入：	n = 5
		a = {2,3,4,5,10}
输出：  12 		
*/	

/*
	书上用的方法：首先用三重循环枚举所有棍子的选择方案，再利用上式判断能否组成三角形。如果可以，那么该三角形就是备选方案。
	这里用了三重循环，所以复杂度是O(n的3次)
*/

/*	改进方法
	首先对数组排序，然后从最大的数字开始，只要遍历1遍就可以找到周长最长的 三角形。
	所以这里的复杂度其实是涉及到一个排序。
*/	
i = n;	
longgirth = 0;
while(i-2>-1)
{
	if(a[i]<a[i-1]+a[i-2]) 
	{
		longgirth = a[i] + a[i-1] + a[i-2];
		break;
	}
	i--;
}



// 1.6.2 POJ的题目Ants
/*
	n只蚂蚁以每秒
*/